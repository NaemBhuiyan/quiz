{"version":3,"sources":["reducers/arrayReducers.js","context/Context.js","context/Provider.js","Components/Navbar.js","Components/AnswerModal.js","Components/EditQuestionModal.js","Components/EditAnswerModal.js","Components/ShowQuestionAnswers.js","router/router.js","Components/Question.js","Components/auth/Login.js","Components/PrivateRoute.js","App.js","index.js"],"names":["arrayReducer","state","action","type","id","payload","isAddToStart","isUpdatedStart","updateQuestionArray","map","question","answers","push","find","item","console","error","filter","filteredState","newAns","answer","text","Context","createContext","initialQuestions","JSON","parse","localStorage","getItem","Provider","children","useReducer","questions","questionsDispatch","useState","answerModal","setAnswerModal","userType","setUserType","history","useHistory","useEffect","setItem","stringify","value","handleLogOut","removeItem","AppNavbar","collapsed","setCollapsed","useContext","Navbar","expand","color","light","NavbarBrand","tag","Link","to","className","NavbarToggler","onClick","Collapse","isOpen","navbar","Nav","NavItem","NavLink","Button","AnswerModal","setModal","modal","questionId","answerText","setAnswerText","toggle","Modal","Form","ModalHeader","ModalBody","Label","for","Input","name","onChange","target","ModalFooter","e","preventDefault","newAnswer","uuidv4","EditModal","setText","EditAnswerModal","answerId","Answers","setQuestionId","givenAnswerId","setGivenAnswerId","setQuestion","givenAnswer","setGivenAnswer","editQuestionModal","setEditQuestionModal","editAnswerModal","setEditAnswerModal","Container","Row","Col","index","Card","classNames","CardBody","style","fontSize","fontWeight","CardFooter","length","ListGroup","ListGroupItem","ListGroupItemHeading","ListGroupItemText","routers","path","component","questionText","setQuestionText","md","newQuestion","meta","access","exact","ShowQuestionAnswers","adminEmail","setAdminEmail","adminPassword","setAdminPassword","onSubmit","FormGroup","placeholder","PrivateRoute","Component","rest","render","props","includes","App","route","key","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.297e9f68.chunk.js","sourcesContent":["export const arrayReducer = (state, action) => {\r\n  const { type, id, payload, isAddToStart, isUpdatedStart } = action;\r\n\r\n  switch (type) {\r\n    case \"ADD-ANSWER\":\r\n      const updateQuestionArray = state.map((question) => {\r\n        if (question.id === id) {\r\n          question.answers.push(payload);\r\n        }\r\n        return question;\r\n      });\r\n      return [...updateQuestionArray];\r\n\r\n    case \"ADD\":\r\n      if (!payload) {\r\n        console.error(\"payload is required!\");\r\n        return state;\r\n      }\r\n      if (state?.find((item) => item.id === payload.id)) {\r\n        console.error(\"Item already exists in the list!\");\r\n        return state;\r\n      }\r\n      if (isAddToStart) {\r\n        return [payload, ...state];\r\n      }\r\n      return [...state, payload];\r\n\r\n    case \"REMOVE\":\r\n      if (id !== 0 && !id) {\r\n        console.error(\"id is required!\");\r\n        return state;\r\n      }\r\n      return state.filter((item) => item.id !== id);\r\n\r\n    case \"EDITANS\":\r\n      const filteredState = state.map((item) => {\r\n        let newAns = item.answers.map((answer) => {\r\n          if (answer.id === payload.id) {\r\n            answer.text = payload.text;\r\n            return answer;\r\n          } else {\r\n            return answer;\r\n          }\r\n        });\r\n        item.answers = [...newAns];\r\n        return item;\r\n      });\r\n\r\n      return [...filteredState];\r\n\r\n    case \"EDIT\":\r\n      if (id !== 0 && !id) {\r\n        console.error(\"id is required!\");\r\n        return state;\r\n      }\r\n\r\n      if (isUpdatedStart) {\r\n        const filteredState = state.filter((item) => item.id !== id);\r\n        return [payload, ...filteredState];\r\n      }\r\n      return state.map((item) => {\r\n        if (item.id === id) {\r\n          item.text = payload.text;\r\n          return item;\r\n        }\r\n        return item;\r\n      });\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\n\r\nconst Context = createContext();\r\n\r\nexport default Context;\r\n","import React, { useState, useEffect, useReducer } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { arrayReducer } from \"../reducers/arrayReducers\";\r\nimport Context from \"./Context\";\r\n\r\nconst initialQuestions = JSON.parse(localStorage.getItem(\"questions\")) || [];\r\n\r\nconst Provider = ({ children }) => {\r\n  const [questions, questionsDispatch] = useReducer(\r\n    arrayReducer,\r\n    initialQuestions\r\n  );\r\n\r\n  const [answerModal, setAnswerModal] = useState(false);\r\n  const [userType, setUserType] = useState(\r\n    JSON.parse(localStorage.getItem(\"userType\"))\r\n  );\r\n\r\n  const history = useHistory();\r\n\r\n  // set localStorage\r\n  useEffect(() => {\r\n    localStorage.setItem(\"questions\", JSON.stringify(questions));\r\n  }, [questions]);\r\n\r\n  const handleLogOut = () => {\r\n    localStorage.removeItem(\"userType\");\r\n    setUserType(null);\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const value = {\r\n    questions,\r\n    questionsDispatch,\r\n    answerModal,\r\n    setAnswerModal,\r\n    userType,\r\n    setUserType,\r\n    handleLogOut,\r\n  };\r\n  return <Context.Provider value={value}>{children}</Context.Provider>;\r\n};\r\n\r\nexport default Provider;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport Context from \"../context/Context\";\r\n\r\nconst AppNavbar = () => {\r\n  const [collapsed, setCollapsed] = useState(true);\r\n\r\n  const { userType, handleLogOut } = useContext(Context);\r\n\r\n  const toggleNavbar = () => setCollapsed(!collapsed);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar expand=\"md\" color=\"light\" light>\r\n        <NavbarBrand tag={Link} to=\"/\" className=\"mr-auto\">\r\n          Quiz\r\n        </NavbarBrand>\r\n        <NavbarToggler onClick={toggleNavbar} className=\"mr-2\" />\r\n        <Collapse isOpen={!collapsed} navbar>\r\n          <Nav className=\"mr-auto ml-4\" navbar>\r\n            <NavItem>\r\n              <NavLink tag={Link} to=\"/questions\">\r\n                Question\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink tag={Link} to=\"/answers\">\r\n                Answers\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n          {userType && (\r\n            <Button color=\"info\" onClick={handleLogOut}>\r\n              Log out\r\n            </Button>\r\n          )}\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppNavbar;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Label,\r\n  Input,\r\n  Form,\r\n} from \"reactstrap\";\r\nimport Context from \"../context/Context\";\r\n\r\nconst AnswerModal = ({ setModal, modal, questionId }) => {\r\n  const [answerText, setAnswerText] = useState();\r\n  const { questionsDispatch } = useContext(Context);\r\n  const submitAnswer = (e) => {\r\n    e.preventDefault();\r\n    const newAnswer = {\r\n      id: uuidv4(),\r\n      text: answerText,\r\n    };\r\n\r\n    questionsDispatch({\r\n      type: \"ADD-ANSWER\",\r\n      id: questionId,\r\n      payload: newAnswer,\r\n    });\r\n    setAnswerText(\"\");\r\n    setModal(false);\r\n  };\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  return (\r\n    <Modal isOpen={modal} toggle={toggle}>\r\n      <Form>\r\n        <ModalHeader toggle={toggle}>Answer</ModalHeader>\r\n        <ModalBody>\r\n          <Label for=\"question\">Text Area</Label>\r\n          <Input\r\n            type=\"textarea\"\r\n            name=\"question\"\r\n            id=\"question\"\r\n            value={answerText}\r\n            onChange={({ target }) => setAnswerText(target.value)}\r\n          />\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            className=\"mt-4\"\r\n            onClick={submitAnswer}>\r\n            Save\r\n          </Button>\r\n          <Button\r\n            type=\"submit\"\r\n            className=\"mt-4\"\r\n            onClick={() => {\r\n              setModal(false);\r\n            }}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AnswerModal;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Label,\r\n  Input,\r\n  Form,\r\n} from \"reactstrap\";\r\nimport Context from \"../context/Context\";\r\n\r\nconst EditModal = ({ setModal, modal, question, questionId }) => {\r\n  const [text, setText] = useState(\"\");\r\n  const { questionsDispatch } = useContext(Context);\r\n\r\n  useEffect(() => {\r\n    modal && setText(question?.text);\r\n  }, [modal]);\r\n\r\n  const submitAnswer = (e) => {\r\n    e.preventDefault();\r\n    questionsDispatch({\r\n      type: \"EDIT\",\r\n      id: questionId,\r\n      payload: { text: text },\r\n    });\r\n    setModal(false);\r\n  };\r\n  const toggle = () => setModal(!modal);\r\n\r\n  return (\r\n    <Modal isOpen={modal} toggle={toggle}>\r\n      <Form>\r\n        <ModalHeader toggle={toggle}>Edit</ModalHeader>\r\n        <ModalBody>\r\n          <Label for=\"question\">Text Area</Label>\r\n          <Input\r\n            type=\"textarea\"\r\n            name=\"question\"\r\n            id=\"question\"\r\n            value={text}\r\n            onChange={({ target }) => setText(target.value)}\r\n          />\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            className=\"mt-4\"\r\n            onClick={submitAnswer}>\r\n            Save\r\n          </Button>\r\n          <Button\r\n            type=\"submit\"\r\n            className=\"mt-4\"\r\n            onClick={() => {\r\n              setModal(false);\r\n            }}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EditModal;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Label,\r\n  Input,\r\n  Form,\r\n} from \"reactstrap\";\r\nimport Context from \"../context/Context\";\r\n\r\nconst EditAnswerModal = ({ setModal, modal, answer, answerId, questionId }) => {\r\n  const [text, setText] = useState(\"\");\r\n  const { questionsDispatch } = useContext(Context);\r\n\r\n  useEffect(() => {\r\n    modal && setText(answer?.text);\r\n  }, [modal]);\r\n\r\n  const submitAnswer = (e) => {\r\n    e.preventDefault();\r\n    questionsDispatch({\r\n      type: \"EDITANS\",\r\n      payload: { id: answerId, text: text },\r\n    });\r\n    setModal(false);\r\n  };\r\n  const toggle = () => setModal(!modal);\r\n\r\n  return (\r\n    <Modal isOpen={modal} toggle={toggle}>\r\n      <Form>\r\n        <ModalHeader toggle={toggle}>Edit Answer</ModalHeader>\r\n        <ModalBody>\r\n          <Label for=\"question\">Text Area</Label>\r\n          <Input\r\n            type=\"textarea\"\r\n            name=\"question\"\r\n            id=\"question\"\r\n            value={text}\r\n            onChange={({ target }) => setText(target.value)}\r\n          />\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            className=\"mt-4\"\r\n            onClick={submitAnswer}>\r\n            Save\r\n          </Button>\r\n          <Button\r\n            type=\"submit\"\r\n            className=\"mt-4\"\r\n            onClick={() => {\r\n              setModal(false);\r\n            }}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EditAnswerModal;\r\n","import React, { useContext, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n  Button,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  ListGroupItemHeading,\r\n  ListGroupItemText,\r\n} from \"reactstrap\";\r\nimport classNames from \"classnames\";\r\nimport Context from \"../context/Context\";\r\nimport AnswerModal from \"./AnswerModal\";\r\nimport EditModal from \"./EditQuestionModal\";\r\nimport EditAnswerModal from \"./EditAnswerModal\";\r\n\r\nconst Answers = () => {\r\n  const [questionId, setQuestionId] = useState();\r\n  const [givenAnswerId, setGivenAnswerId] = useState();\r\n  const [question, setQuestion] = useState();\r\n  const [givenAnswer, setGivenAnswer] = useState();\r\n  const [editQuestionModal, setEditQuestionModal] = useState(false);\r\n  const [editAnswerModal, setEditAnswerModal] = useState(false);\r\n  const {\r\n    questions,\r\n    answerModal,\r\n    setAnswerModal,\r\n    questionsDispatch,\r\n    userType,\r\n  } = useContext(Context);\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-center\">\r\n        <Col>\r\n          <h1 className=\"text-center my-5\">Give Answer</h1>\r\n          {questions?.map((question, index) => {\r\n            return (\r\n              <Card\r\n                key={question.id}\r\n                className={classNames({\r\n                  \"mt-4\": index > 0,\r\n                })}>\r\n                <CardBody className=\"bg-light\">\r\n                  <p\r\n                    style={{ fontSize: \"1.5rem\", fontWeight: 700 }}\r\n                    className=\"mb-1\">\r\n                    {question.text}\r\n                  </p>\r\n                  <span className=\"text-secondary\">Asked by </span>{\" \"}\r\n                  <span className=\"text-info\">Admin</span>\r\n                </CardBody>\r\n                <CardFooter className=\"d-flex justify-content-end bg-transparent border-top-0\">\r\n                  {userType === \"admin\" ? (\r\n                    <>\r\n                      <Button\r\n                        className=\"ml-2\"\r\n                        color=\"danger\"\r\n                        onClick={() => {\r\n                          questionsDispatch({\r\n                            type: \"REMOVE\",\r\n                            id: question.id,\r\n                            payload: question,\r\n                          });\r\n                        }}>\r\n                        Delete\r\n                      </Button>\r\n                      <Button\r\n                        className=\"ml-2\"\r\n                        color=\"danger\"\r\n                        onClick={() => {\r\n                          setEditQuestionModal(true);\r\n                          setQuestion(question);\r\n                          setQuestionId(question.id);\r\n                        }}>\r\n                        Edit\r\n                      </Button>\r\n                    </>\r\n                  ) : (\r\n                    <Button\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        setAnswerModal(true);\r\n                        setQuestionId(question.id);\r\n                      }}>\r\n                      Answer\r\n                    </Button>\r\n                  )}\r\n                </CardFooter>\r\n                <hr />\r\n                {/* {question.answers.map((answer, index) => {\r\n        return <p key={index}>{answer.text}</p>;\r\n      })} */}\r\n                <p className=\"text-warning pl-3\">Top Answer</p>\r\n                {question.answers.length ? (\r\n                  <ListGroup>\r\n                    {question.answers.map((answer, index) => {\r\n                      return (\r\n                        <ListGroupItem key={answer.id}>\r\n                          <ListGroupItemHeading style={{ fontSize: \"1rem\" }}>\r\n                            Login user\r\n                          </ListGroupItemHeading>\r\n                          <ListGroupItemText className=\"mt-3\">\r\n                            {answer.text}\r\n                          </ListGroupItemText>\r\n                          {userType === \"user\" && (\r\n                            <Button\r\n                              className=\"ml-2\"\r\n                              color=\"danger\"\r\n                              onClick={() => {\r\n                                setEditAnswerModal(true);\r\n                                setGivenAnswer(answer);\r\n                                setGivenAnswerId(answer.id);\r\n                              }}>\r\n                              Edit\r\n                            </Button>\r\n                          )}\r\n                        </ListGroupItem>\r\n                      );\r\n                    })}\r\n                  </ListGroup>\r\n                ) : (\r\n                  <p className=\"text-danger pl-3\">No ans given yet</p>\r\n                )}\r\n              </Card>\r\n            );\r\n          })}\r\n        </Col>\r\n        <AnswerModal\r\n          modal={answerModal}\r\n          setModal={setAnswerModal}\r\n          questionId={questionId}\r\n        />\r\n        <EditModal\r\n          modal={editQuestionModal}\r\n          setModal={setEditQuestionModal}\r\n          question={question}\r\n          questionId={questionId}\r\n        />\r\n        <EditAnswerModal\r\n          modal={editAnswerModal}\r\n          setModal={setEditAnswerModal}\r\n          answer={givenAnswer}\r\n          answerId={givenAnswerId}\r\n        />\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Answers;\r\n","import ShowQuestionAnswers from \"../Components/ShowQuestionAnswers\";\r\nimport Login from \"../Components/auth/Login\";\r\nimport Question from \"../Components/Question\";\r\n\r\nconst routers = [\r\n  {\r\n    path: \"/questions\",\r\n    name: \"questions\",\r\n    component: Question,\r\n    meta: {\r\n      access: [\"admin\"],\r\n    },\r\n    exact: true,\r\n  },\r\n  {\r\n    path: \"/answers\",\r\n    name: \"answers\",\r\n    component: ShowQuestionAnswers,\r\n    meta: {\r\n      access: [\"admin\", \"user\"],\r\n    },\r\n    exact: true,\r\n  },\r\n  {\r\n    path: \"/\",\r\n    name: \"login\",\r\n    component: Login,\r\n  },\r\n];\r\n\r\nexport default routers;\r\n","import React, { useState, useContext } from \"react\";\r\nimport {\r\n  Label,\r\n  Input,\r\n  Form,\r\n  Button,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n} from \"reactstrap\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport classNames from \"classnames\";\r\n\r\nimport Context from \"../context/Context\";\r\nimport EditModal from \"./EditQuestionModal\";\r\n\r\nconst Question = () => {\r\n  const [questionText, setQuestionText] = useState(\"\");\r\n  const [questionId, setQuestionId] = useState();\r\n  const [question, setQuestion] = useState();\r\n  const [editQuestionModal, setEditQuestionModal] = useState(false);\r\n\r\n  const { questionsDispatch, questions } = useContext(Context);\r\n\r\n  const submitQuestion = (e) => {\r\n    e.preventDefault();\r\n    const newQuestion = {\r\n      id: uuidv4(),\r\n      text: questionText,\r\n      answers: [],\r\n    };\r\n    questionsDispatch({\r\n      type: \"ADD\",\r\n      payload: newQuestion,\r\n    });\r\n    setQuestionText(\"\");\r\n  };\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-center mt-5\">\r\n        <Col md={6}>\r\n          <h1 className=\"text-center\">Add Questions</h1>\r\n          <Form>\r\n            <Label for=\"question\">Text Area</Label>\r\n            <Input\r\n              type=\"textarea\"\r\n              name=\"question\"\r\n              id=\"question\"\r\n              value={questionText}\r\n              onChange={({ target }) => setQuestionText(target.value)}\r\n            />\r\n            <Button type=\"submit\" className=\"mt-4\" onClick={submitQuestion}>\r\n              Save\r\n            </Button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"justify-content-center mt-4\">\r\n        <Col>\r\n          {questions?.map((question, index) => {\r\n            return (\r\n              <Card\r\n                key={question.id}\r\n                className={classNames({\r\n                  \"mt-4\": index > 0,\r\n                })}>\r\n                <CardBody className=\"bg-light\">\r\n                  <p\r\n                    style={{ fontSize: \"1.5rem\", fontWeight: 700 }}\r\n                    className=\"mb-1\">\r\n                    {question.text}\r\n                  </p>\r\n                  <span className=\"text-secondary\">Asked by </span>{\" \"}\r\n                  <span className=\"text-info\">Admin</span>\r\n                </CardBody>\r\n                <CardFooter className=\"d-flex justify-content-end bg-transparent border-top-0\">\r\n                  <Button\r\n                    className=\"ml-2\"\r\n                    color=\"danger\"\r\n                    onClick={() => {\r\n                      questionsDispatch({\r\n                        type: \"REMOVE\",\r\n                        id: question.id,\r\n                        payload: question,\r\n                      });\r\n                    }}>\r\n                    Delete\r\n                  </Button>\r\n                  <Button\r\n                    className=\"ml-2\"\r\n                    color=\"danger\"\r\n                    onClick={() => {\r\n                      setEditQuestionModal(true);\r\n                      setQuestion(question);\r\n                      setQuestionId(question.id);\r\n                    }}>\r\n                    Edit\r\n                  </Button>\r\n                </CardFooter>\r\n              </Card>\r\n            );\r\n          })}\r\n        </Col>\r\n\r\n        <EditModal\r\n          modal={editQuestionModal}\r\n          setModal={setEditQuestionModal}\r\n          question={question}\r\n          questionId={questionId}\r\n        />\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { useHistory, Redirect } from \"react-router-dom\";\r\n\r\nimport {\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Container,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport Context from \"../../context/Context\";\r\n\r\nconst Login = () => {\r\n  const { setUserType, userType } = useContext(Context);\r\n  const [adminEmail, setAdminEmail] = useState(\"\");\r\n  const [adminPassword, setAdminPassword] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const login = () => {\r\n    if (adminEmail === \"admin@email.com\" && adminPassword === \"admin\") {\r\n      localStorage.setItem(\"userType\", JSON.stringify(\"admin\"));\r\n      setUserType(JSON.parse(localStorage.getItem(\"userType\")));\r\n      history.push(\"/questions\");\r\n    } else {\r\n      localStorage.setItem(\"userType\", JSON.stringify(\"user\"));\r\n      setUserType(JSON.parse(localStorage.getItem(\"userType\")));\r\n      history.push(\"/answers\");\r\n    }\r\n  };\r\n  if (userType) {\r\n    return <Redirect to={userType === \"admin\" ? \"/questions\" : \"/answers\"} />;\r\n  }\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <h3 className=\" mt-5 text-center\">Log in</h3>\r\n        <Row className=\"justify-content-center mt-5\">\r\n          <Col md={6}>\r\n            <Form onSubmit={login}>\r\n              <FormGroup>\r\n                <Label for=\"exampleEmail\">Email</Label>\r\n                <Input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  id=\"exampleEmail\"\r\n                  placeholder=\"with a placeholder\"\r\n                  onChange={({ target }) => setAdminEmail(target.value)}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"examplePassword\">Password</Label>\r\n                <Input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"examplePassword\"\r\n                  placeholder=\"password placeholder\"\r\n                  onChange={({ target }) => setAdminPassword(target.value)}\r\n                />\r\n              </FormGroup>\r\n              <Button type=\"submit\">Login</Button>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport Context from \"../context/Context\";\r\n\r\nexport default function PrivateRoute({ component: Component, meta, ...rest }) {\r\n  const { userType } = useContext(Context);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        userType && meta.access.includes(userType) ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport AppNavbar from \"./Components/Navbar\";\nimport routers from \"./router/router\";\nimport PrivateRoute from \"./Components/PrivateRoute\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppNavbar />\n      <Switch>\n        {routers.map((route) =>\n          route.meta ? (\n            <PrivateRoute {...route} key={route.name}></PrivateRoute>\n          ) : (\n            <Route {...route} key={route.name} />\n          )\n        )}\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Provider from \"./context/Provider\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <Router>\n    <Provider>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}